---
import '../styles/global.css';
export interface Props {
  title: string;
  description?: string;
}

const { title, description = "Professional portfolio of Dr. Mohammad Razuanul Hoque, Professor at Noakhali Science and Technology University" } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  </head>
  <body>
    <slot />
  </body>
</html>

<style is:global>
  html {
    scroll-behavior: smooth;
  }
  
  body {
    font-family: 'Josefin Sans', system-ui, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #ffffff;
    color: #1e293b;
    line-height: 1.6;
  }

  * {
    box-sizing: border-box;
  }

  /* Fade in scroll animations */
  .fade-in-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .fade-in-scroll.visible {
    opacity: 1;
    transform: translateY(0);
  }

  .fade-in-left {
    opacity: 0;
    transform: translateX(-30px);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .fade-in-left.visible {
    opacity: 1;
    transform: translateX(0);
  }

  .fade-in-right {
    opacity: 0;
    transform: translateX(30px);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .fade-in-right.visible {
    opacity: 1;
    transform: translateX(0);
  }

  /* Smooth scrolling for all browsers */
  @supports (scroll-behavior: smooth) {
    html {
      scroll-behavior: smooth;
    }
  }

  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: #f1f5f9;
  }

  ::-webkit-scrollbar-thumb {
    background: #334155;
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: #1e293b;
  }

  /* Enhanced button styles */
  .btn-primary {
    @apply inline-flex items-center px-8 py-4 bg-navy-700 text-white font-semibold rounded-lg shadow-lg hover:bg-navy-800 hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300;
  }

  .btn-secondary {
    @apply inline-flex items-center px-8 py-4 border-2 border-navy-700 text-navy-700 font-semibold rounded-lg hover:bg-navy-700 hover:text-white transform hover:-translate-y-1 transition-all duration-300;
  }

  /* Card hover effects */
  .card-hover {
    @apply transition-all duration-300 transform hover:-translate-y-2 hover:shadow-xl;
  }

  /* Text gradient effects */
  .text-gradient {
    @apply bg-gradient-to-r from-navy-700 to-navy-900 bg-clip-text text-transparent;
  }

  /* Focus states for accessibility */
  .focus-ring {
    @apply focus:outline-none focus:ring-2 focus:ring-navy-500 focus:ring-offset-2;
  }
</style>

<script>
  // Enhanced scroll animation observer
  document.addEventListener('DOMContentLoaded', () => {
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry, index) => {
        if (entry.isIntersecting) {
          setTimeout(() => {
            entry.target.classList.add('visible');
          }, index * 100);
        }
      });
    }, observerOptions);

    // Observe all elements with animation classes
    const animateElements = document.querySelectorAll('.fade-in-scroll, .fade-in-left, .fade-in-right');
    animateElements.forEach(el => observer.observe(el));

    // Smooth scroll for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const targetId = (e.currentTarget as HTMLAnchorElement).getAttribute('href');
        if (targetId) {
          const target = document.querySelector(targetId);
          if (target) {
            target.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        }
      });
    });

    // Parallax effect for hero section
    const hero = document.querySelector('#home') as HTMLElement;
    if (hero) {
      window.addEventListener('scroll', () => {
        const scrolled = window.pageYOffset;
        const rate = scrolled * -0.5;
        hero.style.transform = `translateY(${rate}px)`;
      });
    }
  });
</script>